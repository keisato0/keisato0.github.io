seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "<br><br>")
output <- str_c("<h2>", months[season], "</h2>",
output, "<br><br>")
output
}
}
seasonalHTML(year = 2020, season = "spring")
seasonalHTML(year = 2020, season = "spring")
names(months) <- c("winter", "spring", "summer", "fall")
months <- c("1-3", "4-6", "7-9", "10-12")
names(months) <- c("winter", "spring", "summer", "fall")
months <- c("1-3", "4-6", "7-9", "10-12")
names(months) <- c("winter", "spring", "summer", "fall")
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector)
output <- str_c("<h2>", months[season], "</h2>",
output, "<br><br>")
output
}
}
seasonalHTML(year = 2020, season = "spring")
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "")
output <- str_c("<h2>", months[season], "</h2>",
output, "<br><br>")
output
}
}
seasonalHTML(year = 2020, season = "spring")
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "")
output <- str_c("<h2>", months[season], "</h2>", output)
output
}
}
seasonalHTML(year = 2020, season = "spring")
months <- c("1-3", "4-6", "7-9", "10-12")
names(months) <- c("winter", "spring", "summer", "fall")
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "")
output <- str_c("<h2>", months[season], "</h2>", output)
output
}
}
annualHTMl <- function(whatYear){
codes <- rep(NA, times = 4)
for (i in 1:4) {
codes[i] <- seasonalHTML(year = whatYear, season = names(months)[i])
}
output <- str_c(codes, collapse = "")
output <- str_remove_all(output, "該当する写真がありません")
output <- str_c("<h1>", year, "</h1>", output)
output <- str_remove(output, "<br><br>$")
output
}
source('~/Pictures/picsForHP/functions.R')
source('/functions.R')
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
getwd()
source('functions.R')
annualHTMl(whatYear = 2020)
months <- c("1-3", "4-6", "7-9", "10-12")
names(months) <- c("winter", "spring", "summer", "fall")
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "")
output <- str_c("<h2>", months[season], "</h2>", output)
output
}
}
annualHTMl <- function(whatYear){
codes <- rep(NA, times = 4)
for (i in 1:4) {
codes[i] <- seasonalHTML(year = whatYear, season = names(months)[i])
}
output <- str_c(codes, collapse = "")
output <- str_remove_all(output, "該当する写真がありません")
output <- str_c("<h1>", year, "</h1>", output)
output
}
annualHTMl(whatYear = 2020)
names(months)[i]
names(months)[i]
seasonalHTML(year = 2020, season = "fall")
names(months) <- c("winter", "spring", "summer", "fall")
months <- c("1-3", "4-6", "7-9", "10-12")
months <- c("1-3", "4-6", "7-9", "10-12")
names(months) <- c("winter", "spring", "summer", "fall")
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "")
output <- str_c("<h2>", months[season], "</h2>", output)
output
}
}
seasonalHTML(year = 2020, season = "fall")
for (i in 1:4) {
codes[i] <- seasonalHTML(year = whatYear, season = names(months)[i])
}
for (i in 1:4) {
codes[i] <- seasonalHTML(year = 2020, season = names(months)[i])
}
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "")
output <- str_c("<h2>", months[season], "</h2>", output)
output
}
}
codes <- rep(NA, times = 4)
for (i in 1:4) {
codes[i] <- seasonalHTML(year = 2020, season = names(months)[i])
}
names(months)[i]
seasonalHTML(year = 2020, season = "fall")
codes[i]
codes[i]
str_c(codes, collapse = "")
output <- str_c(codes, collapse = "")
str_remove_all(output, "該当する写真がありません")
# season: winter, spring, summer, fall
months <- c("1-3", "4-6", "7-9", "10-12")
names(months) <- c("winter", "spring", "summer", "fall")
seasonalHTML <- function(year, season){
numPics <- length(list.files(str_c("pics/", year), pattern = season))
if (numPics == 0) {
print("該当する写真がありません")
} else {
picsVector <- rep(NA, times = numPics)
for (i in 1:numPics) {
picsVector[i] <-
str_c('<p><a href="pics/', year, "/", season, "_", i,
'.jpg"><img src ="pics/', year, "/", season, "_", i,
'.jpg"></img></a></p>')
}
output <- str_c(picsVector, collapse = "")
output <- str_c("<h2>", months[season], "</h2>", output)
output
}
}
annualHTMl <- function(whatYear){
codes <- rep(NA, times = 4)
for (i in 1:4) {
codes[i] <- seasonalHTML(year = whatYear, season = names(months)[i])
}
output <- str_c(codes, collapse = "")
output <- str_remove_all(output, "該当する写真がありません")
output <- str_c("<h1>", whatYear, "</h1>", output)
output
}
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
hoge <- annualHTMl(whatYear = 2020)
hoge
str_replace_all(hoge, pattern = '\"', replacement = '\\"')
str_replace_all(hoge, pattern = '\"', replacement = '\\"')
hoge <- annualHTMl(whatYear = 2020)
hoge <- annualHTMl(whatYear = 2020)
hoge
str_remove_all(hoge, "\")
str_remove_all(hoge, "\\")
str_remove_all(hoge, "\\")
str_remove_all(hoge, "\")
source('functions.R')
hoge <- annualHTMl(whatYear = 2020)
str_remove_all(hoge, '\"')
str_remove_all(hoge, '\"')
str_replace_all(hoge, '\"', '"')
hoge <- annualHTMl(whatYear = 2020)
str_replace_all(hoge, '\"', '"')
str_replace_all(hoge, '\"', '"')
str_replace_all(hoge, '\\', '')
hoge <- annualHTMl(whatYear = 2020)
str_replace_all(hoge, '\\', '')
as.character(hoge)
str_replace_all(hoge, '\\', '')
hoge <- annualHTMl(whatYear = 2020)
hoge
read_tsv("caption/2020/txt")
read_tsv("caption/2020.txt")
read_tsv("caption/2020.txt", col_names = F)
read_tsv("caption/2020.txt", col_names = F) %>% as.character()
read_tsv("caption/2020.txt", col_names = F)
caption <- read_tsv("caption/2020.txt", col_names = F)
caption
rename(caption, caption = 1)
caption <-
read_tsv("caption/2020.txt", col_names = F) %>%
rename(caption, caption = 1)
caption <-
read_tsv("caption/2020.txt", col_names = F) %>%
rename(caption = 1)
caption
caption <-
read_tsv("caption/2020.txt", col_names = F) %>%
rename(caption = 1) %>%
add_column(.before = 1, season = NA)
caption
caption$season <- c(
rep("winter", 3),
rep("soring", 4),
rep("soring", 5),
rep("soring", 6)
)
caption$season <- c(
rep("winter", 3),
rep("soring", 4),
rep("soring", 5),
rep("soring", 18)
)
caption$season <- c(
rep("winter", 3),
rep("soring", 4),
rep("soring", 5),
rep("soring", 14)
)
caption
caption$season <- c(
rep("spring", 14),
rep("summer", 1),
rep("fall", 11)
)
caption
caption %>% filter(season = "spring")
caption %>% filter(season = "spring")
caption <-
read_tsv("caption/2020.txt", col_names = F) %>%
rename(caption = 1) %>%
add_column(.before = 1, season = NA)
caption$season <- c(
rep("spring", 14),
rep("summer", 1),
rep("fall", 11)
)
caption %>% filter(season = "spring")
caption %>% dplyr::filter(season = "spring")
caption %>% dplyr::filter(season == "spring")
caption %>% filter(season == "spring")
caption %>% filter(season == "spring")
caption %>% dplyr::filter(season == "spring")
captionBySeason <- caption %>% dplyr::filter(season == "spring")
captionBySeason
captionBySeason
captionBySeason$caption
write_tsv(caption, file = "caption/2020.txt")
caption <-
read_tsv("caption/2020.txt")
caption
write_tsv(caption, file = "caption/2020.txt")
caption <-
read_tsv("caption/2020.txt")
caption
caption <- read_tsv("caption/2020.txt")
filter(caption, when == season)
dplyr::filter(caption, when == "spring")
captionBySeason <- dplyr::filter(caption, when == "spring")
captionBySeason
captionBySeason$caption
source('functions.R')
hoge <- annualHTMl(whatYear = 2020)
hoge
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
source('functions.R')
annualHTMl(whatYear = 2020)
annualHTMl(whatYear = 2021)
annualHTMl(whatYear = 2020)
q(save = "n")
q(save = "no")
